// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PIS_PetRegistry.Models;

#nullable disable

namespace PISPetRegistry.Migrations
{
    [DbContext(typeof(RegistryPetsContext))]
    [Migration("20230104075203_DeletedIdsFromVeterinaryShtuki")]
    partial class DeletedIdsFromVeterinaryShtuki
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PIS_PetRegistry.Models.AmimalCardLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CreateTime")
                        .HasColumnType("date")
                        .HasColumnName("create_time");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("json")
                        .HasColumnName("description");

                    b.Property<int>("FkLogsType")
                        .HasColumnType("integer")
                        .HasColumnName("FK_logs_type");

                    b.Property<int>("FkUser")
                        .HasColumnType("integer")
                        .HasColumnName("FK_user");

                    b.HasKey("Id")
                        .HasName("logs_pkey");

                    b.HasIndex("FkLogsType");

                    b.HasIndex("FkUser");

                    b.ToTable("amimal_card_log", (string)null);
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.AnimalCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("ChipId")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("chip_id");

                    b.Property<int>("FkCategory")
                        .HasColumnType("integer")
                        .HasColumnName("FK_category");

                    b.Property<int>("FkShelter")
                        .HasColumnType("integer")
                        .HasColumnName("FK_shelter");

                    b.Property<bool>("IsBoy")
                        .HasColumnType("boolean")
                        .HasColumnName("is_boy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<string>("Photo")
                        .HasColumnType("character varying")
                        .HasColumnName("photo");

                    b.Property<int?>("YearOfBirth")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("animals_pkey");

                    b.HasIndex("FkCategory");

                    b.HasIndex("FkShelter");

                    b.ToTable("animal_card", (string)null);
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.AnimalCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("animal_category_pkey");

                    b.ToTable("animal_category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Собака/пёс"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Кошка/кот"
                        });
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Contract", b =>
                {
                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("FkAnimalCard")
                        .HasColumnType("integer")
                        .HasColumnName("FK_animal_card");

                    b.Property<int>("FkUser")
                        .HasColumnType("integer")
                        .HasColumnName("FK_user");

                    b.Property<int>("FkPhysicalPerson")
                        .HasColumnType("integer")
                        .HasColumnName("FK_physical_person");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int?>("FkLegalPerson")
                        .HasColumnType("integer")
                        .HasColumnName("FK_legal_person");

                    b.Property<int?>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.HasKey("Date", "FkAnimalCard", "FkUser", "FkPhysicalPerson", "Id")
                        .HasName("contract_pkey");

                    b.HasIndex("FkAnimalCard");

                    b.HasIndex("FkLegalPerson");

                    b.HasIndex("FkPhysicalPerson");

                    b.HasIndex("FkUser");

                    b.ToTable("contract", (string)null);
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("country_pkey");

                    b.ToTable("countries", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "РФ"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Узбекистан"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Казахстан"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Китай"
                        });
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.LegalPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasColumnType("character varying")
                        .HasColumnName("email");

                    b.Property<int>("FkCountry")
                        .HasColumnType("integer")
                        .HasColumnName("FK_country");

                    b.Property<int>("FkLocality")
                        .HasColumnType("integer")
                        .HasColumnName("FK_locality");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("INN");

                    b.Property<string>("Kpp")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("KPP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasColumnType("character varying")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("legal_person_pkey");

                    b.HasIndex("FkCountry");

                    b.HasIndex("FkLocality");

                    b.ToTable("legal_person", (string)null);
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("locality_pkey");

                    b.ToTable("location", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Тюмень"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Тобольск"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Омск"
                        });
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.LogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("log_type_pkey");

                    b.ToTable("log_type", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Добавление"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Изменение"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Удаление"
                        });
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.ParasiteTreatment", b =>
                {
                    b.Property<int>("FkAnimal")
                        .HasColumnType("integer")
                        .HasColumnName("FK_animal");

                    b.Property<int>("FkUser")
                        .HasColumnType("integer")
                        .HasColumnName("FK_user");

                    b.Property<int>("FkMedication")
                        .HasColumnType("integer")
                        .HasColumnName("FK_medication");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.HasKey("FkAnimal", "FkUser", "FkMedication", "Date")
                        .HasName("parasite_treatment_pkey");

                    b.HasIndex("FkMedication");

                    b.HasIndex("FkUser");

                    b.ToTable("parasite_treatment", (string)null);
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.ParasiteTreatmentMedication", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("parasite_treatment_medication_pkey");

                    b.ToTable("parasite_treatment_medication", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Препарат для дегельминтизации"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Препарат для обработки от эктопаразитов"
                        });
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.PhysicalPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasColumnType("character varying")
                        .HasColumnName("email");

                    b.Property<int>("FkCountry")
                        .HasColumnType("integer")
                        .HasColumnName("FK_country");

                    b.Property<int>("FkLocality")
                        .HasColumnType("integer")
                        .HasColumnName("FK_locality");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("physical_person_pkey");

                    b.HasIndex("FkCountry");

                    b.HasIndex("FkLocality");

                    b.ToTable("physical_person", (string)null);
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("role_pkey");

                    b.ToTable("role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ветврач"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Оператор приюта"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Сотрудник ветслужбы"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Сотрудник ОМСУ"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Сотрудник приюта"
                        });
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Shelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("address");

                    b.Property<int>("FkLocation")
                        .HasColumnType("integer")
                        .HasColumnName("FK_location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("shelter_pkey");

                    b.HasIndex("FkLocation");

                    b.ToTable("shelter", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Республики, 1",
                            FkLocation = 1,
                            Name = "Сытая морда"
                        },
                        new
                        {
                            Id = 2,
                            Address = "​Семёна Ремезова, 123/2",
                            FkLocation = 2,
                            Name = "Счастливый ушастик"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Рабиновича, 69а",
                            FkLocation = 3,
                            Name = "Умка"
                        });
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("email");

                    b.Property<int?>("FkLocation")
                        .HasColumnType("integer")
                        .HasColumnName("FK_location");

                    b.Property<int>("FkRole")
                        .HasColumnType("integer")
                        .HasColumnName("FK_role");

                    b.Property<int?>("FkShelter")
                        .HasColumnType("integer")
                        .HasColumnName("FK_shelter");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("login");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("user_pkey");

                    b.HasIndex("FkLocation");

                    b.HasIndex("FkRole");

                    b.HasIndex("FkShelter");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "mikhailivanovic@gmail.com",
                            FkRole = 1,
                            FkShelter = 1,
                            Login = "mikhail1",
                            Name = "Михайлов Михаил Иванович",
                            Password = "c508b76b382725a100c21e8a4d452619"
                        },
                        new
                        {
                            Id = 2,
                            Email = "lenaivanova@gmail.com",
                            FkRole = 2,
                            FkShelter = 1,
                            Login = "elena2",
                            Name = "Михайлова Елена Ивановна",
                            Password = "35b4a09a4aa3bede9a833923d24d3921"
                        },
                        new
                        {
                            Id = 3,
                            Email = "petrov@gmail.com",
                            FkRole = 3,
                            Login = "petr3",
                            Name = "Петров Петр Петрович",
                            Password = "00354d7169c4399322be98a27f553da3"
                        },
                        new
                        {
                            Id = 4,
                            Email = "sidorov@gmail.com",
                            FkLocation = 1,
                            FkRole = 4,
                            Login = "gena4",
                            Name = "Сидоров Геннадий Иванович",
                            Password = "0228a06e78a77ad502f703e3fa9ecae1"
                        },
                        new
                        {
                            Id = 5,
                            Email = "ivanov@gmail.com",
                            FkRole = 5,
                            FkShelter = 1,
                            Login = "ivan5",
                            Name = "Иванов Иван Иванович",
                            Password = "8e5aa3866bb85289df35552106de5b21"
                        });
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Vaccination", b =>
                {
                    b.Property<DateOnly>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int>("FkAnimal")
                        .HasColumnType("integer")
                        .HasColumnName("FK_animal");

                    b.Property<int>("FkUser")
                        .HasColumnType("integer")
                        .HasColumnName("FK_user");

                    b.Property<int>("FkVaccine")
                        .HasColumnType("integer")
                        .HasColumnName("FK_vaccine");

                    b.HasKey("DateEnd", "FkAnimal", "FkUser", "FkVaccine")
                        .HasName("vaccination_pkey");

                    b.HasIndex("FkAnimal");

                    b.HasIndex("FkUser");

                    b.HasIndex("FkVaccine");

                    b.ToTable("vaccination", (string)null);
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.Property<int>("ValidityPeriod")
                        .HasColumnType("integer")
                        .HasColumnName("validity_period");

                    b.HasKey("Id")
                        .HasName("vaccine_pkey");

                    b.ToTable("vaccine", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Вакцина против бешенества",
                            Number = 101777,
                            ValidityPeriod = 6
                        },
                        new
                        {
                            Id = 2,
                            Name = "Вакцина против чумы",
                            Number = 102771,
                            ValidityPeriod = 6
                        });
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.VeterinaryAppointmentAnimal", b =>
                {
                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("FkAnimal")
                        .HasColumnType("integer")
                        .HasColumnName("FK_animal");

                    b.Property<int>("FkUser")
                        .HasColumnType("integer")
                        .HasColumnName("FK_user");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_completed");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Date", "FkAnimal", "FkUser")
                        .HasName("veterinary_appointment_animal_pkey");

                    b.HasIndex("FkAnimal");

                    b.HasIndex("FkUser");

                    b.ToTable("veterinary_appointment_animal", (string)null);
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.AmimalCardLog", b =>
                {
                    b.HasOne("PIS_PetRegistry.Models.LogType", "FkLogsTypeNavigation")
                        .WithMany("AmimalCardLogs")
                        .HasForeignKey("FkLogsType")
                        .IsRequired()
                        .HasConstraintName("FK_logs_type");

                    b.HasOne("PIS_PetRegistry.Models.User", "FkUserNavigation")
                        .WithMany("AmimalCardLogs")
                        .HasForeignKey("FkUser")
                        .IsRequired()
                        .HasConstraintName("FK_user");

                    b.Navigation("FkLogsTypeNavigation");

                    b.Navigation("FkUserNavigation");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.AnimalCard", b =>
                {
                    b.HasOne("PIS_PetRegistry.Models.AnimalCategory", "FkCategoryNavigation")
                        .WithMany("AnimalCards")
                        .HasForeignKey("FkCategory")
                        .IsRequired()
                        .HasConstraintName("FK_category");

                    b.HasOne("PIS_PetRegistry.Models.Shelter", "FkShelterNavigation")
                        .WithMany("AnimalCards")
                        .HasForeignKey("FkShelter")
                        .IsRequired()
                        .HasConstraintName("FK_shelter");

                    b.Navigation("FkCategoryNavigation");

                    b.Navigation("FkShelterNavigation");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Contract", b =>
                {
                    b.HasOne("PIS_PetRegistry.Models.AnimalCard", "FkAnimalCardNavigation")
                        .WithMany("Contracts")
                        .HasForeignKey("FkAnimalCard")
                        .IsRequired()
                        .HasConstraintName("FK_animal_card");

                    b.HasOne("PIS_PetRegistry.Models.LegalPerson", "FkLegalPersonNavigation")
                        .WithMany("Contracts")
                        .HasForeignKey("FkLegalPerson")
                        .HasConstraintName("FK_legal_person");

                    b.HasOne("PIS_PetRegistry.Models.PhysicalPerson", "FkPhysicalPersonNavigation")
                        .WithMany("Contracts")
                        .HasForeignKey("FkPhysicalPerson")
                        .IsRequired()
                        .HasConstraintName("FK_physical_person");

                    b.HasOne("PIS_PetRegistry.Models.User", "FkUserNavigation")
                        .WithMany("Contracts")
                        .HasForeignKey("FkUser")
                        .IsRequired()
                        .HasConstraintName("FK_user");

                    b.Navigation("FkAnimalCardNavigation");

                    b.Navigation("FkLegalPersonNavigation");

                    b.Navigation("FkPhysicalPersonNavigation");

                    b.Navigation("FkUserNavigation");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.LegalPerson", b =>
                {
                    b.HasOne("PIS_PetRegistry.Models.Country", "FkCountryNavigation")
                        .WithMany("LegalPeople")
                        .HasForeignKey("FkCountry")
                        .IsRequired()
                        .HasConstraintName("FK_country");

                    b.HasOne("PIS_PetRegistry.Models.Location", "FkLocalityNavigation")
                        .WithMany("LegalPeople")
                        .HasForeignKey("FkLocality")
                        .IsRequired()
                        .HasConstraintName("FK_locality");

                    b.Navigation("FkCountryNavigation");

                    b.Navigation("FkLocalityNavigation");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.ParasiteTreatment", b =>
                {
                    b.HasOne("PIS_PetRegistry.Models.AnimalCard", "FkAnimalNavigation")
                        .WithMany("ParasiteTreatments")
                        .HasForeignKey("FkAnimal")
                        .IsRequired()
                        .HasConstraintName("FK_animal");

                    b.HasOne("PIS_PetRegistry.Models.ParasiteTreatmentMedication", "FkMedicationNavigation")
                        .WithMany("ParasiteTreatments")
                        .HasForeignKey("FkMedication")
                        .IsRequired()
                        .HasConstraintName("FK_medication");

                    b.HasOne("PIS_PetRegistry.Models.User", "FkUserNavigation")
                        .WithMany("ParasiteTreatments")
                        .HasForeignKey("FkUser")
                        .IsRequired()
                        .HasConstraintName("FK_user");

                    b.Navigation("FkAnimalNavigation");

                    b.Navigation("FkMedicationNavigation");

                    b.Navigation("FkUserNavigation");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.PhysicalPerson", b =>
                {
                    b.HasOne("PIS_PetRegistry.Models.Country", "FkCountryNavigation")
                        .WithMany("PhysicalPeople")
                        .HasForeignKey("FkCountry")
                        .IsRequired()
                        .HasConstraintName("FK_country");

                    b.HasOne("PIS_PetRegistry.Models.Location", "FkLocalityNavigation")
                        .WithMany("PhysicalPeople")
                        .HasForeignKey("FkLocality")
                        .IsRequired()
                        .HasConstraintName("FK_locality");

                    b.Navigation("FkCountryNavigation");

                    b.Navigation("FkLocalityNavigation");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Shelter", b =>
                {
                    b.HasOne("PIS_PetRegistry.Models.Location", "FkLocationNavigation")
                        .WithMany("Shelters")
                        .HasForeignKey("FkLocation")
                        .IsRequired()
                        .HasConstraintName("FK_locality");

                    b.Navigation("FkLocationNavigation");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.User", b =>
                {
                    b.HasOne("PIS_PetRegistry.Models.Location", "FkLocationNavigation")
                        .WithMany("Users")
                        .HasForeignKey("FkLocation")
                        .HasConstraintName("FK_location");

                    b.HasOne("PIS_PetRegistry.Models.Role", "FkRoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("FkRole")
                        .IsRequired()
                        .HasConstraintName("FK_role");

                    b.HasOne("PIS_PetRegistry.Models.Shelter", "FkShelterNavigation")
                        .WithMany("Users")
                        .HasForeignKey("FkShelter")
                        .HasConstraintName("FK_shelter");

                    b.Navigation("FkLocationNavigation");

                    b.Navigation("FkRoleNavigation");

                    b.Navigation("FkShelterNavigation");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Vaccination", b =>
                {
                    b.HasOne("PIS_PetRegistry.Models.AnimalCard", "FkAnimalNavigation")
                        .WithMany("Vaccinations")
                        .HasForeignKey("FkAnimal")
                        .IsRequired()
                        .HasConstraintName("FK_animal");

                    b.HasOne("PIS_PetRegistry.Models.User", "FkUserNavigation")
                        .WithMany("Vaccinations")
                        .HasForeignKey("FkUser")
                        .IsRequired()
                        .HasConstraintName("FK_user");

                    b.HasOne("PIS_PetRegistry.Models.Vaccine", "FkVaccineNavigation")
                        .WithMany("Vaccinations")
                        .HasForeignKey("FkVaccine")
                        .IsRequired()
                        .HasConstraintName("FK_vaccine");

                    b.Navigation("FkAnimalNavigation");

                    b.Navigation("FkUserNavigation");

                    b.Navigation("FkVaccineNavigation");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.VeterinaryAppointmentAnimal", b =>
                {
                    b.HasOne("PIS_PetRegistry.Models.AnimalCard", "FkAnimalNavigation")
                        .WithMany("VeterinaryAppointmentAnimals")
                        .HasForeignKey("FkAnimal")
                        .IsRequired()
                        .HasConstraintName("FK_animal");

                    b.HasOne("PIS_PetRegistry.Models.User", "FkUserNavigation")
                        .WithMany("VeterinaryAppointmentAnimals")
                        .HasForeignKey("FkUser")
                        .IsRequired()
                        .HasConstraintName("FK_user");

                    b.Navigation("FkAnimalNavigation");

                    b.Navigation("FkUserNavigation");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.AnimalCard", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("ParasiteTreatments");

                    b.Navigation("Vaccinations");

                    b.Navigation("VeterinaryAppointmentAnimals");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.AnimalCategory", b =>
                {
                    b.Navigation("AnimalCards");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Country", b =>
                {
                    b.Navigation("LegalPeople");

                    b.Navigation("PhysicalPeople");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.LegalPerson", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Location", b =>
                {
                    b.Navigation("LegalPeople");

                    b.Navigation("PhysicalPeople");

                    b.Navigation("Shelters");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.LogType", b =>
                {
                    b.Navigation("AmimalCardLogs");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.ParasiteTreatmentMedication", b =>
                {
                    b.Navigation("ParasiteTreatments");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.PhysicalPerson", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Shelter", b =>
                {
                    b.Navigation("AnimalCards");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.User", b =>
                {
                    b.Navigation("AmimalCardLogs");

                    b.Navigation("Contracts");

                    b.Navigation("ParasiteTreatments");

                    b.Navigation("Vaccinations");

                    b.Navigation("VeterinaryAppointmentAnimals");
                });

            modelBuilder.Entity("PIS_PetRegistry.Models.Vaccine", b =>
                {
                    b.Navigation("Vaccinations");
                });
#pragma warning restore 612, 618
        }
    }
}
